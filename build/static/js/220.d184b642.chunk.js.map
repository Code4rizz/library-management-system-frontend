{"version":3,"file":"static/js/220.d184b642.chunk.js","mappings":"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","sources":["shared/hooks/http-hook.js","user/pages/Auth.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL+'/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL+'/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","useForm","email","value","isValid","password","_jsxs","React","children","_jsx","ErrorModal","onClear","Card","className","LoadingSpinner","asOverlay","onSubmit","event","preventDefault","process","JSON","stringify","inputs","login","userId","token","formData","FormData","append","name","image","Input","element","id","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","ImageUpload","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Button","disabled","inverse","onClick","switchModeHandler","prevMode","inputReducer","state","action","val","validate","isTouched","props","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","href","size","danger","to","Link","exact","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","src","alt","pickImageHandler","click","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validator","trim","test"],"sourceRoot":""}