{"version":3,"file":"static/js/420.11d6b160.chunk.js","mappings":"+HAEO,MAAMA,EAAgBA,KAC3B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAOC,IAAYF,EAAAA,EAAAA,YAEpBG,GAAqBC,EAAAA,EAAAA,QAAO,IAE5BC,GAAcC,EAAAA,EAAAA,aAClBC,eAAOC,GAAoD,IAA/CC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDX,GAAa,GACb,MAAMgB,EAAgB,IAAIC,gBAC1Bb,EAAmBc,QAAQC,KAAKH,GAEhC,IACE,MAAMI,QAAiBC,MAAMZ,EAAK,CAChCC,SACAI,OACAC,UACAO,OAAQN,EAAcM,SAGlBC,QAAqBH,EAASI,OAMpC,GAJApB,EAAmBc,QAAUd,EAAmBc,QAAQO,OACtDC,GAAWA,IAAYV,IAGpBI,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAI/B,OADA7B,GAAa,GACNuB,CACT,CAAE,MAAOO,GAGP,MAFA3B,EAAS2B,EAAID,SACb7B,GAAa,GACP8B,CACR,CACF,EACA,IAcF,OAPAC,EAAAA,EAAAA,WAAU,IACD,KAEL3B,EAAmBc,QAAQc,QAAQC,GAAaA,EAAUC,UAE3D,IAEI,CAAEnC,YAAWG,QAAOI,cAAa6B,WAXrBA,KACjBhC,EAAS,Q,6DCvCb,MAqCA,EArCeiC,GACTA,EAAMC,MAENC,EAAAA,EAAAA,KAAA,KACEC,UAAW,kBAAkBH,EAAMI,MAAQ,aAAaJ,EAAMK,SAC5D,qBAAqBL,EAAMM,QAAU,mBACvCL,KAAMD,EAAMC,KAAKM,SAEhBP,EAAMO,WAITP,EAAMQ,IAENN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACHD,GAAIR,EAAMQ,GACVE,MAAOV,EAAMU,MACbP,UAAW,kBAAkBH,EAAMI,MAAQ,aAAaJ,EAAMK,SAC5D,qBAAqBL,EAAMM,QAAU,mBAAmBC,SAEzDP,EAAMO,YAKXL,EAAAA,EAAAA,KAAA,UACEC,UAAW,kBAAkBH,EAAMI,MAAQ,aAAaJ,EAAMK,SAC5D,qBAAqBL,EAAMM,QAAU,mBACvCK,KAAMX,EAAMW,KACZC,QAASZ,EAAMY,QACfC,SAAUb,EAAMa,SAASN,SAExBP,EAAMO,U,uGCjCb,MAuBA,EAvBYP,IACV,MAAMc,GAAS7C,EAAAA,EAAAA,WAET,OAAE8C,EAAM,KAAEC,GAAShB,EAWzB,OATAL,EAAAA,EAAAA,WAAU,KACR,MAAMsB,EAAM,IAAIC,OAAOC,OAAOC,KAAKC,IAAIP,EAAOhC,QAAS,CACrDiC,OAAQA,EACRC,KAAMA,IAGR,IAAIE,OAAOC,OAAOC,KAAKE,OAAO,CAAEC,SAAUR,EAAQE,IAAKA,KACtD,CAACF,EAAQC,KAGVd,EAAAA,EAAAA,KAAA,OACEsB,IAAKV,EACLX,UAAW,OAAOH,EAAMG,YACxBsB,MAAOzB,EAAMyB,S,wCCVnB,MAuGA,EAvGkBzB,IAChB,MAAM,UAAErC,EAAS,MAAEG,EAAK,YAAEI,EAAW,WAAE6B,IAAerC,EAAAA,EAAAA,KAChDgE,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAASC,IAAcjE,EAAAA,EAAAA,WAAS,IAChCkE,EAAkBC,IAAuBnE,EAAAA,EAAAA,WAAS,GAInDoE,EAAkBA,IAAMH,GAAW,GAMnCI,EAAsBA,KAC1BF,GAAoB,IAkBtB,OACEG,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAA7B,SAAA,EACbL,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACvE,MAAOA,EAAOwE,QAASvC,KACnCG,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJC,KAAMX,EACNY,SAAUR,EACVS,OAAQ1C,EAAM2C,QACdC,aAAa,4BACbC,YAAY,4BACZC,QAAQ5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACnC,QAASqB,EAAgB1B,SAAC,UAAeA,UAEzDL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeI,UAC5BL,EAAAA,EAAAA,KAACmB,EAAG,CAACN,OAAQf,EAAMgD,YAAahC,KAAM,UAG1Cd,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJC,KAAMT,EACNU,SAAUP,EACVQ,OAAO,gBACPG,YAAY,4BACZC,QACEX,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAA7B,SAAA,EACbL,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAAC1C,SAAO,EAACO,QAASsB,EAAoB3B,SAAC,YAG9CL,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACzC,QAAM,EAACM,QAxCIxC,UAC3B4D,GAAoB,GACpB,UACQ9D,EAC+B,oCAAW8B,EAAMiD,KACpD,SACA,KACA,CACEC,cAAe,UAAYxB,EAAKyB,QAGpCnD,EAAMoD,SAASpD,EAAMiD,GACvB,CAAE,MAAOvD,GAAM,GA4BsCa,SAAC,cAIjDA,UAEDL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,qGAKLL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYI,UACxB4B,EAAAA,EAAAA,MAACkB,EAAAA,EAAI,CAAClD,UAAU,sBAAqBI,SAAA,CAClC5C,IAAauC,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,CAACC,WAAS,KACvCrD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBI,UAChCL,EAAAA,EAAAA,KAAA,OACEsD,IAAK,yBAAsCxD,EAAMyD,QACjDC,IAAK1D,EAAM2D,WAGfxB,EAAAA,EAAAA,MAAA,OAAKhC,UAAU,mBAAkBI,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,MAAAK,SAAKP,EAAM2D,SACXzD,EAAAA,EAAAA,KAAA,MAAAK,SAAKP,EAAM2C,WACXzC,EAAAA,EAAAA,KAAA,KAAAK,SAAIP,EAAM4D,kBAEZzB,EAAAA,EAAAA,MAAA,OAAKhC,UAAU,sBAAqBI,SAAA,EAClCL,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAAC1C,SAAO,EAACO,QA9EHiD,IAAM/B,GAAW,GA8EUvB,SAAC,gBAGxCmB,EAAKoC,SAAW9D,EAAM+D,YACrB7D,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACvC,GAAI,WAAWR,EAAMiD,KAAK1C,SAAC,SAGpCmB,EAAKoC,SAAW9D,EAAM+D,YACrB7D,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACzC,QAAM,EAACM,QAlFMoD,KAC/BhC,GAAoB,IAiFuCzB,SAAC,uBClEhE,EA/BkBP,GACW,IAAvBA,EAAMiE,MAAMzF,QAEZ0B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBI,UAChC4B,EAAAA,EAAAA,MAACkB,EAAAA,EAAI,CAAA9C,SAAA,EACHL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,wCACJL,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACvC,GAAG,cAAaD,SAAC,sBAO/BL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYI,SACvBP,EAAMiE,MAAMhD,IAAIiD,IACfhE,EAAAA,EAAAA,KAACiE,EAAS,CAERlB,GAAIiB,EAAMjB,GACVQ,MAAOS,EAAMT,MACbE,MAAOO,EAAMP,MACbC,YAAaM,EAAMN,YACnBjB,QAASuB,EAAMvB,QACfoB,UAAWG,EAAME,QACjBpB,YAAakB,EAAMG,SACnBjB,SAAUpD,EAAMsE,eARXJ,EAAMjB,OCwBrB,EAvCmBsB,KACjB,MAAOC,EAAcC,IAAmB5G,EAAAA,EAAAA,aAClC,UAAEF,EAAS,MAAEG,EAAK,YAAEI,EAAW,WAAE6B,IAAerC,EAAAA,EAAAA,KAEhDoG,GAASY,EAAAA,EAAAA,KAAYZ,QAE3BnE,EAAAA,EAAAA,WAAU,KACYvB,WAClB,IACE,MAAMe,QAAqBjB,EACzB,yCAAoD4F,KAEtDW,EAAgBtF,EAAawF,OAC/B,CAAE,MAAOjF,GAAM,GAEjBkF,IACC,CAAC1G,EAAa4F,IAQjB,OACE3B,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAA7B,SAAA,EACbL,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACvE,MAAOA,EAAOwE,QAASvC,IAClCpC,IACCuC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQI,UACrBL,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,OAGjB3F,GAAa6G,IACbtE,EAAAA,EAAAA,KAAC2E,EAAS,CAACZ,MAAOO,EAAcF,cAfVQ,IAC1BL,EAAgBM,GACdA,EAAW1F,OAAO6E,GAASA,EAAMjB,KAAO6B,U,sECvB9C,MAaA,EAbmB9E,IAEfE,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJE,SAAUzC,EAAMsC,QAChBI,OAAO,qBACPF,OAAQxC,EAAMlC,MACdgF,QAAQ5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACnC,QAASZ,EAAMsC,QAAQ/B,SAAC,SAAcA,UAEtDL,EAAAA,EAAAA,KAAA,KAAAK,SAAIP,EAAMlC,S,+ECNhB,MAAMkH,EAAehF,IACnB,MAAMiF,GACJ9C,EAAAA,EAAAA,MAAA,OAAKhC,UAAW,SAASH,EAAMG,YAAasB,MAAOzB,EAAMyB,MAAMlB,SAAA,EAC7DL,EAAAA,EAAAA,KAAA,UAAQC,UAAW,iBAAiBH,EAAMkF,cAAc3E,UACtDL,EAAAA,EAAAA,KAAA,MAAAK,SAAKP,EAAM0C,YAEbP,EAAAA,EAAAA,MAAA,QACEgD,SACEnF,EAAMmF,SAAWnF,EAAMmF,SAAWC,GAASA,EAAMC,iBAClD9E,SAAA,EAEDL,EAAAA,EAAAA,KAAA,OAAKC,UAAW,kBAAkBH,EAAM4C,eAAerC,SACpDP,EAAMO,YAETL,EAAAA,EAAAA,KAAA,UAAQC,UAAW,iBAAiBH,EAAM6C,cAActC,SACrDP,EAAM8C,eAKf,OAAOwC,EAAAA,aAAsBL,EAASM,SAASC,eAAe,gBAoBhE,EAjBcxF,IAEVmC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAA7B,SAAA,CACZP,EAAMwC,OAAQtC,EAAAA,EAAAA,KAACuF,EAAAA,EAAQ,CAAC7E,QAASZ,EAAMyC,YACxCvC,EAAAA,EAAAA,KAACwF,EAAAA,EAAa,CACZC,GAAI3F,EAAMwC,KACVoD,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAOxF,UAElBL,EAAAA,EAAAA,KAAC8E,EAAY,IAAKhF,Q,oDCrC1B,MAQA,EARaA,IAETE,EAAAA,EAAAA,KAAA,OAAKC,UAAW,QAAQH,EAAMG,YAAasB,MAAOzB,EAAMyB,MAAMlB,SAC3DP,EAAMO,U","sources":["shared/hooks/http-hook.js","shared/components/FormElements/Button.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Card.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n         process.env.REACT_APP_BACKEND_URL+`/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","mapRef","center","zoom","map","window","google","maps","Map","Marker","position","ref","style","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","coordinates","id","Authorization","token","onDelete","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","showDeleteWarningHandler","items","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sourceRoot":""}