{"version":3,"file":"static/js/830.aabe6d0d.chunk.js","mappings":"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","sources":["shared/hooks/http-hook.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n      `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","inputReducer","state","action","type","value","val","isValid","validate","validators","isTouched","props","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","_jsx","placeholder","onChange","onBlur","rows","_jsxs","className","children","htmlFor","label","errorText","href","size","inverse","danger","to","Link","exact","onClick","disabled","Modal","onCancel","onClear","header","show","footer","Button","ModalOverlay","content","style","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","inputHandler","setFormData","title","description","place","fetchPlace","LoadingSpinner","ErrorModal","JSON","stringify","Authorization","token","userId","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Card","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}