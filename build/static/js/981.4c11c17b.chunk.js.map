{"version":3,"file":"static/js/981.4c11c17b.chunk.js","mappings":"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","sources":["shared/hooks/http-hook.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/util/validators.js","places/pages/NewPlace.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+'/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","inputReducer","state","action","type","value","val","isValid","validate","validators","isTouched","props","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","_jsx","placeholder","onChange","onBlur","rows","_jsxs","className","children","htmlFor","label","errorText","href","size","inverse","danger","to","Link","exact","onClick","disabled","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","Button","pickImageHandler","click","Modal","onCancel","onClear","header","show","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","NewPlace","auth","useContext","AuthContext","inputHandler","title","description","address","image","history","useHistory","ErrorModal","formData","FormData","append","process","Authorization","token","LoadingSpinner","asOverlay","Input","ImageUpload"],"sourceRoot":""}